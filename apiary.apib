FORMAT: 1A
HOST: https://api.alooga.com.br/

# Alooga

Seja bem-vindo(a) a documentação da API do Alooga.

# Apresentação

Nós criamos nossa API seguindo a técnica REST. Dessa forma, nossas URLs são amigáveis e previsíveis. Todas nossas APIs respondem em JSON.

Todas nossas chamadas são feitas (na versão mais atual da API) na URL https://api.alooga.com.br


# Autenticação

A autenticação na API é feita através da utilização de um API Token. Cada usuário tem um Token que é enviado quando se cadastra ou loga.

Para autenticar você deve passar o e-mail e o token do usuário no header de cada chamada.

Todas as chamadas devem ser feitas via HTTPS e devem conter a autenticação.

# Erros

A API utiliza os próprios Códigos de Status HTTP para indicar sucesso ou falha da chamada. Em geral os códigos iniciados com 2 indicam sucesso, os iniciados com 4 indicam erro (Ex: Falta de parâmetro obrigatório) e iniciados com 5 indicam erro interno nos servidores do Alooga.

**Resposta de Erro**

```apib
    errors  ==> Pode conter tanto uma string de erro como um hash contendo o atributo e seus erros.
```

**Ex de Erro de Autenticação (Status 401)**

```
    {
        "errors": "Unauthorized"
    }
```

**Ex de Erro de Parâmetro (Status 422)**

```
    {
        "errors": {
            "due_date": [
                "should not be in the past"
            ]
        }
    }
```

## Questions Collection [/questions]

### List All Questions [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]

### Create a New Question [POST]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }
